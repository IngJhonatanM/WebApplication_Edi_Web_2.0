@using EDIBANK.Models.Monitor
@model MonitorViewModel

@{
    ViewBag.Title = "Monitor";
    var captionText = Model.MostrarEntradas ? "Bandeja De Entradas" : "Bandeja De Salidas";
}

<h1 class="display-5 text-center"><strong><ins>@captionText</ins></strong></h1>
<br />

<form asp-action="Monitor" method="get">
    <div class="form-group d-flex flex-row mb-3">
        <label asp-for="Desde" class="control-label fw-bold">Desde</label> &nbsp
        <input asp-for="Desde" min="@($"{Model.Menor:yyyy-MM-dd}")" max="@($"{Model.Mayor:yyyy-MM-dd}")" class="form-control" /> &nbsp
        <label asp-for="Hasta" class="control-label fw-bold">Hasta</label> &nbsp
        <input asp-for="Hasta" min="@($"{Model.Menor:yyyy-MM-dd}")" max="@($"{Model.Mayor:yyyy-MM-dd}")" class="form-control" />
    </div>
    @* <div class="form-group">
        <label class="form-check-label">
            <input asp-for="MostrarEntradas" type="radio" value="true" class="form-check-input" />
            Entradas
        </label>
        <label class="form-check-label">
            <input asp-for="MostrarEntradas" type="radio" value="false" class="form-check-input" />
            Salidas
        </label>
    </div> *@
    <div class="form-group">
        <input type="submit" value="Buscar" class="btn btn-primary" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
</form>

<br/>

<table class="table table-secondary table-striped table-hover table-bordered border-dark border-5 caption-top">
    @* <caption class="fw-bold"><abbr title="Guía"><ins>@captionText</ins></abbr></caption> *@
    <thead class="table-primary">
        <tr>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().EmisorId)
            </th>
            <th>
                @Html.DisplayNameFor(static string? (MonitorViewModel m) => m.Intercambios.First().ReceptorId)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().Numero)
            </th>
            <th>
                @Html.DisplayNameFor(static Status (MonitorViewModel m) => m.Intercambios.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(static DateTime (MonitorViewModel m) => m.Intercambios.First().Cargado)
            </th>
            <th>
                @Html.DisplayNameFor(static DateTime? (MonitorViewModel m) => m.Intercambios.First().Descargado)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().ArchivoIntercambio)
            </th>
            <th>
                Acción
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (Intercambio i in Model.Intercambios)
        {
            <tr>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.Id)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.EmisorId)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string? (MonitorViewModel m) => i.ReceptorId)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.Numero)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(Status (MonitorViewModel m) => i.Status)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(DateTime (MonitorViewModel m) => i.Cargado)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(DateTime? (MonitorViewModel m) => i.Descargado)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.ArchivoIntercambio)
                </td>
                <td class="text-nowrap d-flex justify-content-end">
                    @if (i.Status is Status.DESCARGADO)
                    {
                        string origenId = i.Id;

                        <form asp-action="Recargar" method="post">
                            <input asp-for="Desde" type="hidden" />
                            <input asp-for="Hasta" type="hidden" />
                            <input asp-for="MostrarEntradas" type="hidden" />
                            <input asp-for="@origenId" type="hidden" />
                            <input type="submit" value="&#x2b8d;" title="Recargar" class="btn btn-primary" />
                        </form>
                    }
                    else
                    {
                        <button disabled class="btn btn-secondary">&#x2b8d;</button>
                    }
                    &nbsp
                    @if (i.Status is Status.DISPONIBLE)
                    {
                        string origenId = i.Id;

                        <form asp-action="Remover" method="post">
                            <input asp-for="Desde" type="hidden" />
                            <input asp-for="Hasta" type="hidden" />
                            <input asp-for="MostrarEntradas" type="hidden" />
                            <input asp-for="@origenId" type="hidden" />
                            <input type="submit" value="&times;" title="Remover" class="btn btn-primary" />
                        </form>
                    }
                    else
                    {
                        <button disabled class="btn btn-secondary">&times;</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}